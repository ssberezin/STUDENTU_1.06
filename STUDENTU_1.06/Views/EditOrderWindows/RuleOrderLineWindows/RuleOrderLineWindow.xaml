<Window x:Class="STUDENTU_1._06.Views.EditOrderWindows.RuleOrderLineWindows.RuleOrderLineWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
       xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
         xmlns:helpes="clr-namespace:STUDENTU_1._06.Helpes" 
        xmlns:scm1="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        mc:Ignorable="d"
         WindowStartupLocation="CenterScreen"
        Title="Равспределение заказа на выполнение" 
        Height="560" Width="850" MinWidth="850" MinHeight="500"
         TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
             
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{DynamicResource MaterialDesignFont}">

    <Window.InputBindings>
        <KeyBinding Gesture="Esc" Command="{Binding CloseWindowCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <!--CloseWindowCommand can find in ForEditOrder.cs-->
    </Window.InputBindings>
    
    <Window.Resources>

        <ResourceDictionary>
            <helpes:NullToBooleanConverter x:Key="NullBoolConverter" />
            <helpes:DateFormatConverter x:Key="dateFormatConverter"/>
            <helpes:HeightToFontSizeConverter x:Key="heightToFontSizeConverter"/>
            <helpes:BoolInverterConverter x:Key="boolInverterConverter"/>

            <!--for sorting in listbox without behind code-->
            <CollectionViewSource x:Key="SortedItems" Source="{Binding AuthorsRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
                <!--AuthorsRecords can find in RuleOrderLineClass.cs-->
                <CollectionViewSource.SortDescriptions>
                    <scm1:SortDescription PropertyName="Persone.NickName"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="SortedStatuses" Source="{Binding _Status.StatusRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
                <!--StatusRecords can find in _Status.cs-->
                <CollectionViewSource.SortDescriptions>
                    <scm1:SortDescription PropertyName="StatusName"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="SortedSelectedAuthors" 
                                  Source="{Binding SelectedAuthorsRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
                <!--SelectedAuthorsRecords can find in RuleOrderLineClass.cs-->
                <CollectionViewSource.SortDescriptions>
                    <scm1:SortDescription PropertyName="Persone.NickName"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBoxBase}">
                <Grid >
                    <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="White"
                BorderThickness="2" CornerRadius="0"  >
                        <ScrollViewer x:Name="PART_ContentHost"/>
                    </Border>
                </Grid>
            </ControlTemplate>

            
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"/>
                <Setter Property="FontFamily" Value="Verdana"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="SpellCheck.IsEnabled" Value="True"/>                
                <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource heightToFontSizeConverter}}"/>
                
            </Style>
            <Style TargetType="ListBox" x:Name="ListBoxStyle">
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Margin" Value="3"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
            </Style>

            <Style TargetType="TextBlock" x:Name="TxtBlockStyle">
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

           
        </ResourceDictionary>
    </Window.Resources>

    <Grid Background="#FFE9F1EF">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="0.2*"/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1.5*"/>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <StackPanel Grid.ColumnSpan="2" Margin="2" >
            <TextBlock Text="Авторы" />
            <StackPanel>
                <RadioButton GroupName="GroupA" Content="Все авторы" IsChecked="False" Command="{Binding AllAuthorsCallCommand}"
                             IsEnabled="{Binding ElementName=ComplicatedFilter, Path=IsChecked, Converter={StaticResource boolInverterConverter}}"/>
                <!--Command AllAuthorsCallCommand can find in _RuleOrderLine.cs -->
                <RadioButton GroupName="GroupA"
                              IsEnabled="{Binding ElementName=ComplicatedFilter, Path=IsChecked, Converter={StaticResource boolInverterConverter}}"
                             Content="Авторы по тематике" IsChecked="False" Command="{Binding ThemAuthorsCallCommand}"/>
                <!--Command ThemAuthorsCallCommand  can find in _RuleOrderLine.cs -->
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="ComplicatedFilter" IsChecked="False"/>
                    <Button x:Name="ComplicatedFilterButton" Content="Сложный фильтр"   IsEnabled="{Binding IsChecked,ElementName=ComplicatedFilter}"
                        Command="{Binding  CallAuthorsComlicatedFilterCommand}"
                      CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"
                       Margin="3,1.5,60,0" />
                </StackPanel>
            </StackPanel >
        </StackPanel>
        <StackPanel Grid.Column="1" Grid.ColumnSpan="2">
            <StackPanel HorizontalAlignment="Stretch"/>
            <TextBlock/>
            <RadioButton GroupName="GroupA" x:Name="AuthorNickFind" Content="Поиск по нику автора" IsChecked="False" Command="{Binding ThemAuthorsCallCommand}"
                             VerticalContentAlignment="Bottom"
                         IsEnabled="{Binding ElementName=ComplicatedFilter, Path=IsChecked, Converter={StaticResource boolInverterConverter}}"/>
            <StackPanel Orientation="Horizontal">
                <TextBox x:Name="AuthorNick" Width="100" Margin="3" Background="White"
                         FontSize="12"
                         IsEnabled="{Binding IsChecked, ElementName=AuthorNickFind}" Height="22"/>
                <Button Content="Найти" Width="70" IsEnabled="{Binding IsChecked,ElementName=AuthorNickFind}"
                        Command="{Binding  FindAuthorByNickCommand}"
                        CommandParameter="{Binding Path=Text, ElementName=AuthorNick}"/>
            </StackPanel>
        </StackPanel>
        <ListBox x:Name="Authors"
                     Grid.Row="1" Grid.RowSpan="5"
                    ItemsSource="{Binding Source={StaticResource SortedItems}, 
                    UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding AuthorsRecord}" 
                     TabIndex="2" >
            <!--SortedItems can find above in Window.Resources-->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel >
                        <TextBlock Text="-----------------------------" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Background="AliceBlue"/>
                        <TextBlock Text="{Binding Persone.NickName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center"  />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Persone.Surname}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Persone.Name}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Persone.Patronimic}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Author.AuthorStatus.AuthorStatusName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Left" Foreground="Green" FontWeight="Bold"/> 
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock Text="Авторы, оцениваеющие работы" Grid.Row="1" Grid.Column="2"/>
        <ListBox x:Name="AuthorsAvaluat" Grid.Row="2" Grid.Column="2" Grid.RowSpan="4"
                    ItemsSource="{Binding Source={StaticResource SortedSelectedAuthors}, 
                    UpdateSourceTrigger=PropertyChanged}" 
                   SelectedItem="{Binding AuthorsRecord}"                   
                   TabIndex="6">
            <!--SortedItems can find above in Window.Resources-->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel >
                        <TextBlock Text="{Binding Persone.NickName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center"/>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Grid.Column="1" Grid.Row="2" Content="+" Background="Green" TabIndex="6"
                IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=Authors}"
                Command="{Binding AddSelectedAuthorCommand}" Height="33" Margin="3,3,3,0" VerticalAlignment="Top"/>
        <!-- Command AddSelectedAuthorCommand can find in RuleOrderLineClass.cs-->
        <Button Grid.Column="1" Grid.Row="3" Content="-" Background="Red" FontWeight="ExtraBold" TabIndex="5"
                IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=AuthorsAvaluat}"
                 Command="{Binding DelSelectedAuthorCommand}"/>
        <!-- Command DelSelectedAuthorCommand can find in RuleOrderLineClass.cs-->
        <WrapPanel Grid.Row="9" Grid.ColumnSpan="3"  Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Статус заказа: " FontWeight="Bold"  Foreground="Brown"/>
            </Viewbox>
            <ComboBox x:Name="StatusList"  MinWidth="130"  TabIndex="9" SelectedIndex="0" 
                      IsEditable="False"
                     ItemsSource="{Binding Source={StaticResource SortedStatuses}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _Status.Status}"
                     DisplayMemberPath="StatusName">
                <!--Status can find in _Status.cs-->
            </ComboBox>
            <Button x:Name="AddDStatus" Width="40" Background="Gray" Content="..." TabIndex="4"
                    Command="{Binding _Status.NewEditStatusCommand}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
            <!--Command NewEditStatusCommand can find in _Status.cs-->
            <Button x:Name="CompareAvaluation"  Background="Orange" Content="Сравнить оценки" TabIndex="7"
                    Command="{Binding CompareAvaluationCommand}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
            <!-- Command CompareAvaluationCommand does not exist yet-->
        </WrapPanel>
        <TextBlock Text="Контакты автора"  Grid.Column="3"/>
      
        <ListBox x:Name="AuthorContacts" 
                 Grid.Row="1" Grid.Column="3" Grid.RowSpan="5"                                   
                     TabIndex="8" >
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Скопировать оба Email" Command="{Binding CopyEmailToClipBoardCommand}" 
                              Height="20"/>
                    <MenuItem Header="Скопировать 1-й номер телефона" Command="{Binding CopyPhone1ToClipBoardCommand}" 
                              Height="20"/>
                    <MenuItem Header="Скопировать 2-й номер телефона" Command="{Binding CopyPhone2ToClipBoardCommand}" 
                              Height="20"/>
                    <MenuItem Header="Скопировать FaceBook" Command="{Binding CopyFBToClipBoardCommand}" 
                              Height="20"/>
                    <MenuItem Header="Скопировать VK" Command="{Binding CopyVKToClipBoardCommand}" 
                              Height="20"/>
                </ContextMenu>
            </ListBox.ContextMenu>
            <TextBlock Text="{Binding  AuthorsRecord.Contacts.Email1}" Margin="2"                                   
                                   TextAlignment="Center"/>
            <TextBlock Text="{Binding AuthorsRecord.Contacts.Email2}" Margin="2"                                   
                                   TextAlignment="Center"/>
            <TextBlock Text="{Binding AuthorsRecord.Contacts.Phone1}" Margin="2"                                   
                                   TextAlignment="Center"/>
            <TextBlock Text="{Binding AuthorsRecord.Contacts.Phone2}" Margin="2"                                  
                                   TextAlignment="Center"/>
            <TextBlock Text="{Binding AuthorsRecord.Contacts.FaceBook}" Margin="2"                                  
                                   TextAlignment="Center"/>
            <TextBlock Text="{Binding AuthorsRecord.Contacts.VK}" Margin="2"                                  
                                   TextAlignment="Center"/>
        </ListBox>
        <Button Grid.Column="3" Grid.Row="6" Content="Выбрать автора" Background="#FF41BD41"
                TabIndex="9"
                 IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=AuthorsAvaluat}"
                Command="{Binding SetExecuteAuthorCommand}" 
                CommandParameter="{Binding ElementName=AuthorsAvaluat , Path=SelectedItem}"/>
        <!--Command SetExecuteAuthorCommand can find in  RuleOrderLineClass.cs-->
        <Button Grid.Column="0" Grid.Row="6" Content="Задать оценку автору" Background="CadetBlue"
                TabIndex="9"
                  IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=AuthorsAvaluat}"
                Command="{Binding _Evaluation.SetAuthorAvaluationCommand}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
        <!--Command SetExecuteAuthorCommand can find in  SetAuthorAvaluationCommand-->
        <TextBlock Text="Заказ выполняет"  Grid.Column="4" Foreground="#FF2D9C42"/>
        <StackPanel Grid.Column="4" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" >
            <TextBlock x:Name="AothorWinner"  
                    Foreground="#FFEB6934" Margin="5"                   
                    Text="{Binding ExecuteAuthor.Persone.NickName}"  />
            <WrapPanel>
                <TextBlock  Text="Цена:" Margin="5" Foreground="Blue"/>
                <TextBlock  Text="{Binding _Evaluation.FinalEvaluationRecord.Price}" Foreground="Red" />
            </WrapPanel>
        </StackPanel>

        <StackPanel Grid.Column="4" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" >
            <TextBlock  Text="Срок выполнения:" Margin="5" Foreground="Blue"/>
            <TextBlock  Text="{ Binding _Evaluation.FinalEvaluationRecord.Deadline,
                Converter={StaticResource dateFormatConverter}}" Foreground="Red" />
        </StackPanel>
        <TextBlock  Text="Коменты автора при оценке:" Margin="5" Foreground="Blue"
                     Grid.Column="5" Grid.Row="3"/>
        <TextBox x:Name="AuthorEvalComment" Text="{Binding _Evaluation.FinalEvaluationRecord.EvaluateDescription}"
                  TextAlignment="Center" Grid.Column="5" Grid.Row="4" Grid.RowSpan="5"
                      VerticalContentAlignment="Center" Foreground="Red" Background="White"
                      Margin="6,6,5.6,5.8" TextWrapping="Wrap" Grid.ColumnSpan="3"  >
            <TextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Скопировать в буфер обмена" Command="{Binding CopyToClipBoardCommand}" 
                              Height="20"
                              CommandParameter="{Binding Path=Text, ElementName=AuthorEvalComment}"/>
                </ContextMenu>
            </TextBox.ContextMenu>

        </TextBox>
        <Button Grid.Column="4" Grid.Row="9" Content="Отмена" Background="Red"
                TabIndex="9"                
                Command="{Binding  _Evaluation.CancelAuthorEvaluateAuthorRecordCommand}"
                 CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <Button Grid.Column="3" Grid.Row="9" Content="Сохранить" Background="#FF183ACD"
                TabIndex="9" 
                IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=AuthorsAvaluat}"
                Command="{Binding _Evaluation.SaveAuthorEvaluateAuthorRecordCommand}"/>
        <TextBlock Grid.Row="6" Grid.Column="2"  Text="Постановка задачи для автора" Margin="5" Foreground="Blue"/>

        <TextBox x:Name="AuthorTrablSet" Grid.Row="7" Grid.RowSpan="2" Grid.ColumnSpan="4"    
                 Text="{Binding Order.DescriptionForClient}"
                  TextAlignment="Center"  AcceptsReturn="True"
                      VerticalContentAlignment="Stretch" HorizontalContentAlignment="Left" Foreground="Red" Background="White"
                      Margin="6,6,5.4,6" TextWrapping="Wrap" FontSize="12" >
            <TextBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Скопировать в буфер обмена" Command="{Binding CopyToClipBoardCommand}" 
                              Height="20"
                              CommandParameter="{Binding Path=Text, ElementName=AuthorTrablSet}"/>                    
                </ContextMenu>
            </TextBox.ContextMenu>
        </TextBox>
        <!--Order can find in ForEditOrder.cs-->

    </Grid>
</Window>
