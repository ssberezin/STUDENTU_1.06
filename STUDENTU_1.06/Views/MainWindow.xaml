<Window x:Class="STUDENTU_1._06.MainWindow"
        x:Name="RootWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:STUDENTU_1._06"
        xmlns:model="clr-namespace:STUDENTU_1._06.Model"         
        xmlns:helpes="clr-namespace:STUDENTU_1._06.Helpes" 
        xmlns:scm1="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"               
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Title="База данных СТУДЕНТУ" Height="700" Width="1200" MinHeight="700"       MinWidth="1200"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto" 
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" 
        WindowStartupLocation="CenterScreen"   
       
>
    <Window.Resources>

        <ResourceDictionary>
            <helpes:DateFormatConverter x:Key="dateFormatConverter"/>
            <helpes:NullToBooleanConverter x:Key="NullBoolConverter" />
            <helpes:StringToBrushConverter x:Key="StringToBrushConverter" />
            <helpes:SelectedItemsConverter x:Key="SelectedItemsConverter" />

            <CollectionViewSource x:Key="SortedDirections" Source="{Binding _Filters.SelectedDirections}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
                <!--DirRecords can find in DirectionClass.cs-->
                <CollectionViewSource.SortDescriptions>
                    <scm1:SortDescription PropertyName="DirectionName"/>
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

        </ResourceDictionary>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+R" Command="{Binding UpdateOrederList}"/>
        <KeyBinding Gesture="Ctrl+N" Command="{Binding NewOrder}"/>
        <KeyBinding Gesture="Alt+X" Command="{Binding CloseMainWindow}"/>
    </Window.InputBindings>
    <!--"UpdateOrederList" , "NewOrder",  "CloseMainWindow" we can find in  "MainViewModel.cs"-->
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="0.05*"/>
            <RowDefinition Height="0.9*"/>
            <RowDefinition Height="0.1*"/>
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Grid.ColumnSpan="2" >
            <Menu  FontSize="12" Padding="1"  VerticalAlignment="Top" >
                <MenuItem Header="Файл" Height="17"  VerticalAlignment="Top">
                    <MenuItem Header="Сменить базу данных"  />
                    <MenuItem Header="Создать резервную копию"/>
                    <Separator Height="Auto"/>
                    <MenuItem Header="Выход" Command="{Binding CloseMainWindow}"/>
                    "CloseMainWindow" we can find in  "MainViewModel.cs"
                </MenuItem>
                <MenuItem Header="Правка"  Height="17"  VerticalAlignment="Top">
                    <MenuItem Header="Заказы" Height="17" VerticalAlignment="Top">
                        <MenuItem Header="Новый заказ  Ctrl+N" Command="{Binding NewOrder}"
                                  Height="17" VerticalAlignment="Top"/>

                        "NewOrder" we can find in  "MainViewModel.cs"

                        <MenuItem Header="Редактировать заказ" Height="17" VerticalAlignment="Top"
                              IsEnabled="{Binding SelectedItem,
                                          Converter={StaticResource NullBoolConverter}, ElementName=GridOrders}"/>
                        <MenuItem Header="Удалить заказ" Height="17" VerticalAlignment="Top"
                              IsEnabled="{Binding SelectedItem,
                                          Converter={StaticResource NullBoolConverter}, ElementName=GridOrders}"/>
                    </MenuItem>
                    <MenuItem Header="Авторы" Height="17" VerticalAlignment="Top">
                        <MenuItem Header="Добавить нового" Command="{Binding AddAuthorCommand}"
                                  Height="17" VerticalAlignment="Top"/>
                        <MenuItem Header="Редакция" 
                                  Height="17" VerticalAlignment="Top"
                                  Command="{Binding CallEditAuthorWindow}"/>
                    </MenuItem>


                </MenuItem>
                <MenuItem Header="Черный список"  Height="17"  VerticalAlignment="Top" >
                    <MenuItem Header="Отобразить">
                        <MenuItem Header="Заказы" />
                        <MenuItem Header="Заказчики" />
                        <MenuItem Header="Авторы" />
                    </MenuItem>
                    <MenuItem Header="Найти совпадения" />
                    <MenuItem Header="Правка">
                        <MenuItem Header="Добавить" />
                        <MenuItem Header="Удалить" />
                        <MenuItem Header="Редактировать" />
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="Поиск"  Height="17"  VerticalAlignment="Top" >
                    <MenuItem Header="По номеру" />
                    <MenuItem Header="Сложный фильтр" />
                </MenuItem>
            </Menu>
        </DockPanel>


        <DataGrid x:Name="GridOrders" ItemsSource="{Binding Records}" 
                  SelectedItem="{Binding SelectedRecord}"                 
                                 
                  AutoGenerateColumns="False" SelectionMode="Single"
                  IsReadOnly="True" Margin="0,22,0,10" Grid.RowSpan="2"  >

            <!--"Records" , "SelectedOrderLine" we can find in  "MainViewModel.cs"-->
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <!--задаем фон заказам, которые разбиты на несколько подзаказов-->
                    <!--set the background for orders that are divided into several suborders-->
                    <Setter Property="Foreground"
                           Value="{Binding Status, Converter={StaticResource StringToBrushConverter}}" />
                    <Setter Property="Background" 
                            Value="{Binding OrderCount ,Converter={StaticResource StringToBrushConverter}}"/>
                    <!--"Status" , "OrderCount" we can find in  "MainViewModel.cs"-->
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <!--задачаем фон и цвет шрифта записиси заказа со статусом "-отказ от выполнения-"-->
                            <!--set the background and font color of the order record with the status "rejection"-->
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Status}" Value="отказ от выполнения" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Background" Value="#FFE4C58E" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Обновить Ctrl+R" Command="{Binding UpdateOrederList}"/>
                    <!--"UpdateOrederList" we can find in  "MainViewModel.cs"-->
                    <MenuItem Header="Редактировать"                               
                              Command="{Binding EditOrderCommand}"/>
                    <MenuItem Header="Подробности" />
                    <MenuItem Header="Удалить" />
                </ContextMenu>
            </DataGrid.ContextMenu>
            <!--all the binding elements of the DataGrid element can be found in the class "MainViewModel.cs"-->
            <DataGrid.Columns>
                <DataGridTextColumn Width="0.355*" Binding="{Binding OrderNumber}"  Header="№заказа"/>
                <DataGridTextColumn Width="0.5*" Binding="{Binding ClientName}" Header="Клиент"/>
                <DataGridTextColumn Width="0.5*" Binding="{Binding SubName}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        </Style>
                    </DataGridTextColumn.HeaderStyle>
                    <DataGridTextColumn.Header>
                        <DockPanel >
                            <Button DockPanel.Dock="Right" 
                                    x:Name="btnFilter" Content=" v " FontWeight="ExtraBold" 
                                    Background="White" Foreground="Blue" Margin="3,0,0,0"
                            Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},
                                    Path=DataContext._Filters.SetDirectionFilterCommand}">
                            </Button>
                            <TextBlock Text="Направление" />
                            <Popup x:Name="popDir" Placement="Bottom"                                   
                                   PlacementTarget="{Binding ElementName=btnFilter}" 
                                   IsOpen="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                            AncestorType={x:Type Window}},Path=DataContext._Filters.DirrectionFilter,
                                            UpdateSourceTrigger=PropertyChanged}"
                                   StaysOpen="False" Width="Auto">
                                <Border Background="White" BorderBrush="Gray" BorderThickness="1,1,1,1">
                                    <StackPanel Margin="5,5,5,15">
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,15">
                                            <Button Margin="0,0,0,0" Name="btnSelectAll" 
                                                    Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                             AncestorType={x:Type Window}},
                                                             Path=DataContext._Filters.SelectAlltDirectionFilterCommand}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <TextBlock Text="Выбрать все" Foreground="Blue" Cursor="Hand" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>

                                            <Button Margin="10,0,0,0" Name="btnUnselectAll" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                             AncestorType={x:Type Window}},Path=DataContext._Filters.UnselectAllDirectionFilter}">
                                                <Button.Template>
                                                    <ControlTemplate>
                                                        <TextBlock Text="Снять фильтры" Foreground="Blue" Cursor="Hand" />
                                                    </ControlTemplate>
                                                </Button.Template>
                                            </Button>
                                        </StackPanel>

                                        <ListBox x:Name="lstDirs" BorderThickness="0" 
                                                    ItemsSource="{Binding Source={StaticResource SortedDirections}}"                                                     
                                                    >
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <DockPanel >
                                                        <CheckBox Content="{Binding  DirectionName}" 
                                                                  IsChecked="False"                                                                                                                               
                                                              />
                                                        <!--Checked="{Binding _Checked, Mode= TwoWay, UpdateSourceTrigger=PropertyChanged}"-->
                                                        <!--Unchecked="{Binding ApplyFilters}"-->
                                                        <!--<TextBlock Text="{Binding DirectionName}" Margin="2"
                                                                   TextWrapping="WrapWithOverflow" 
                                                                   TextAlignment="Center"/>-->
                                                    </DockPanel>

                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                        <StackPanel Orientation="Horizontal">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                    <ColumnDefinition Width="1*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Content="Применить" Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, 
                                                             AncestorType={x:Type Window}},Path=DataContext._Filters.ApplyFiltersCommand}" Background="Green"/>
                                                <Button Grid.Column="2" Content="Отменить" Command="{Binding _Filters.CancelFiltersCommand}" HorizontalAlignment="Right"/>
                                            </Grid>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </DockPanel>
                    </DataGridTextColumn.Header>

                </DataGridTextColumn>
                <DataGridTextColumn Width="0.35*"  Binding="{Binding  DateOfReception, Converter={StaticResource dateFormatConverter}}" Header="Принят"/>
                <DataGridTextColumn Width="0.35*"  Binding="{Binding  DeadLine, Converter={StaticResource dateFormatConverter}}" Header="Deadline"/>
                <DataGridTextColumn Width="0.39*" Binding="{Binding DateDone, Converter={StaticResource dateFormatConverter}}" Header="Выполнен"/>
                <DataGridTextColumn Width="0.35*" Binding="{Binding Status}" Header="Статус">
                </DataGridTextColumn>
                <DataGridTextColumn Width="0.5*" Binding="{Binding TypeOfWork}" Header="Тип работы"/>
                <DataGridTextColumn Width="0.3*" Binding="{Binding AuthorNickName}" Header="Автор"/>
                <DataGridTextColumn Width="0.3*" Binding="{Binding Price}" Header="Цена"/>
                <DataGridTextColumn Width="0.45*" Binding="{Binding Prepayment}" Header="Предоплата"/>
            </DataGrid.Columns>
        </DataGrid>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="142*"/>
                <ColumnDefinition Width="154*"/>
                <ColumnDefinition Width="177*"/>
                <ColumnDefinition Width="407*" />
                <ColumnDefinition Width="164*"/>
                <ColumnDefinition Width="149*"/>
            </Grid.ColumnDefinitions>
            <Button Content="Новый заказ" Grid.Column="0"
                    Name="NewOrder" Margin="5,5,5.4,5"  Command="{Binding NewOrder}"
                    Background="Green"/>
            <!--"NewOrder" can be found in the class "MainViewModel.cs"-->
            <Button Content="Править заказ" Grid.Column="1"
                    Name="EditOrder" Margin="4.6,5,4.8,5"  
                    Background="Black"
                    CommandParameter="{Binding ElementName=GridOrders, Path=SelectedItem}"
                    Command="{Binding EditOrderCommand}"
                 
                    IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=GridOrders}"/>

            <Button Content="Печать квитанции" Grid.Column="2"
                    Name="PrintCheck" Margin="5.2,5,4.6,5"  
                    Background="LightBlue" Foreground="Black"
                      IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=GridOrders}"/>
            <StackPanel Grid.Column="3"   Margin="3" VerticalAlignment="Center" >
                <TextBlock Text="Заказы , принятые" Foreground="Blue" FontWeight="Bold" HorizontalAlignment="Center"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Horizontal">
                        <Viewbox  MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                                VerticalAlignment="Stretch">
                            <TextBlock Text="с " Foreground="Blue" FontWeight="Bold"/>
                        </Viewbox>
                        <DatePicker  Name="DateStart" IsDropDownOpen="False" SelectedDateFormat="Short" 
                        MaxWidth="150" TabIndex="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                        SelectedDate="{Binding StartDateReception,Mode=TwoWay}"/>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Viewbox  MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                                VerticalAlignment="Stretch">
                            <TextBlock Text=" по " Foreground="Blue" FontWeight="Bold"/>
                        </Viewbox>
                        <DatePicker  Name="DateEnd" IsDropDownOpen="False" SelectedDateFormat="Short" 
                        MaxWidth="150" TabIndex="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                        SelectedDate="{Binding EndDateReception,Mode=TwoWay}"/>
                    </StackPanel>
                    <Button Content="Показать" Grid.Column="2"
                    Name="ShowOrdes" Margin="5.2,5,4.6,5"  
                    Background="LightBlue" Foreground="Black" 
                    Command="{Binding UpdateOrederList}"/>
                </Grid>
            </StackPanel>
            <Button Content="Удалить заказ" Grid.Column="5"
                    Name="DeleteOrder" Margin="5.2,5,4.6,5"  
                    Background="DarkRed"
                      IsEnabled="{Binding SelectedItem,
                     Converter={StaticResource NullBoolConverter}, ElementName=GridOrders}"
                   Command="{Binding DeleteOrderCommand}"
                    CommandParameter="{Binding ElementName=GridOrders, Path=SelectedItem}"/>
            <!--<Button Content="Добавить тестовую информацию в БД" Grid.Column="3"
                     Margin="5"  Command="{Binding AddTestInfoCommand}"
                    Background="LightBlue" Foreground="Black"/>-->
        </Grid>
    </Grid>

</Window>
