<Window x:Class="STUDENTU_1._06.Views.PersoneOperations.AuthorOperationsWindows.AuthorEditWindow"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:STUDENTU_1._06.Views"       
        xmlns:model="clr-namespace:STUDENTU_1._06.Model"         
        xmlns:helpes="clr-namespace:STUDENTU_1._06.Helpes" 
       xmlns:wpfTool="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:scm1="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        
        mc:Ignorable="d"
         Title="Информация об авторе" Height="750" Width="1300" MinHeight="750" MinWidth="1300" x:Name="UI"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
             
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"
        FontFamily="{DynamicResource MaterialDesignFont}" 
        WindowStartupLocation="CenterScreen" 
        Background="{DynamicResource MaterialDesignPaper}" >



    <Window.InputBindings>
        <KeyBinding Gesture="Esc" Command="{Binding CloseWindowCommand}"
                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"/>
        <KeyBinding Gesture="Ctrl+S" Command="{Binding SaveAuthorDataCommand}"/>

    </Window.InputBindings>

    <Window.Resources>
        <helpes:DateFormatConverter x:Key="dateFormatConverter"/>
        <helpes:HeightToFontSizeConverter x:Key="heightToFontSizeConverter"/>
        <helpes:BoolInverterConverter x:Key="boolInverterConverter"/>
        <helpes:ImagePathConverter x:Key="imagePathConverter"/>
        <helpes:NullToBooleanConverter x:Key="NullBoolConverter" />


        <!--for sorting in listbox without behind code-->


        <CollectionViewSource x:Key="SortedStatuses" Source="{Binding _AuthorStatus.AuthorStatusRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
            <CollectionViewSource.SortDescriptions>
                <scm1:SortDescription PropertyName="AuthorStatusName"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="SortedAuthorRecords" 
                              Source="{Binding  AuthorsRecords, UpdateSourceTrigger=PropertyChanged}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
            <!--DirRecords can find in _Direction.cs-->
            <CollectionViewSource.SortDescriptions>
                <scm1:SortDescription PropertyName="Persone.NickName"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <CollectionViewSource x:Key="SortedItems" Source="{Binding  _Dir.DirRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
            <!--DirRecords can find in _Direction.cs-->
            <CollectionViewSource.SortDescriptions>
                <scm1:SortDescription PropertyName="DirectionName"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>



        <CollectionViewSource x:Key="SortedSubjects" Source="{Binding  _Subj.SubjRecords}"
                xmlns:scm="clr-namespace:System.ComponentModel;assembly=Win‌​dowsBase">
            <!--SubjRecords can find in SubjectClass.cs-->
            <CollectionViewSource.SortDescriptions>
                <scm1:SortDescription PropertyName="SubName"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>



        <ControlTemplate x:Key="validationFailed">
            <StackPanel Orientation="Horizontal">
                <Border BorderBrush="Red" BorderThickness="2">
                    <AdornedElementPlaceholder />
                </Border>
                <TextBlock Foreground="Red" FontSize="26" FontWeight="Bold">!</TextBlock>
            </StackPanel>
        </ControlTemplate>

        <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBoxBase}">
            <Grid >
                <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="White"
                BorderThickness="2" CornerRadius="0"  >
                    <ScrollViewer x:Name="PART_ContentHost"/>
                </Border>
            </Grid>
        </ControlTemplate>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Template" Value="{StaticResource TextBoxTemplate}"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="SpellCheck.IsEnabled" Value="True"/>

            <Setter Property="Language" Value="ru-ru"/>
            <Setter Property="FontSize" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource Self}, Converter={StaticResource heightToFontSizeConverter}}"/>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>

        </Style>




    </Window.Resources>



    <Grid  FocusManager.FocusedElement="{Binding ElementName=TBxName}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.1*"/>
            <ColumnDefinition Width="0.75*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="0.75*"/>
            <ColumnDefinition Width="0.75*"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition Height="5*"/>
        </Grid.RowDefinitions>
        <Grid Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="2.2*"/>
                <ColumnDefinition Width="0.5*"/>
            </Grid.ColumnDefinitions>
            <Viewbox  MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Статус: " FontWeight="Bold"  Foreground="Brown" />
            </Viewbox>
            <ComboBox  Grid.Column="1" Margin="4"   TabIndex="0" SelectedIndex="0" 
                      IsEditable="False" 
                     MinWidth="100"
                     ItemsSource="{Binding Source={StaticResource SortedStatuses}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _AuthorStatus.SelectedAuthorStatus, Mode=TwoWay}"
                     DisplayMemberPath="AuthorStatusName"                        
                      HorizontalContentAlignment="Left"                        
                     Background="White" 
                       IsSynchronizedWithCurrentItem="False">
                <!--Status can fint in _AuthorStatus.cs-->
            </ComboBox>
            <Button Grid.Column="2" MinWidth="30" Background="Gray" Content="..." TabIndex="11"
                    Command="{Binding _AuthorStatus.NewEditAuthorStatusCommand}" 
                    CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
            <Viewbox Grid.Row="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Предмет:" FontWeight="Bold" Foreground="Brown" />
            </Viewbox>
            <ComboBox Grid.Row="1" Grid.Column="1"  Margin="3.8,0,4,8.6"   TabIndex="1"   SelectedIndex="0" 
                      MinWidth="100"
                     ItemsSource="{Binding Source={StaticResource SortedSubjects}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _Subj.SelectedSubj}"
                     DisplayMemberPath="SubName"
                      ToolTip="{Binding _Subj.SelectedSubj.SubName}" 
                     HorizontalContentAlignment="Left"
                     Background="White" VerticalAlignment="Bottom" 
                      IsSynchronizedWithCurrentItem="False">
                <!--SortedSubjects can find above in Window.Resources-->
                <!--Subj can find in _Subject.cs-->
            </ComboBox>
            <Button Grid.Row="1" Grid.Column="2"  MinWidth="30" Background="Gray" Content="..." TabIndex="12"
                    Command="{Binding _Subject.NewEditSubject}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
            <Viewbox Grid.Row="2" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Направление: " FontWeight="Bold"  Foreground="Brown" />
            </Viewbox>
            <ComboBox Grid.Column="1" Grid.Row="2" Margin="4"   TabIndex="2" SelectedIndex="0" 
                      IsEditable="False"
                     ItemsSource="{Binding Source={StaticResource SortedItems}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _Dir.SelectedDir}"
                     DisplayMemberPath="DirectionName"
                     ToolTip="{Binding _Dir.SelectedDir.DirectionName}" 
                     HorizontalContentAlignment="Left"
                      MinWidth="100"
                     Background="White"
                      IsSynchronizedWithCurrentItem="False">
                <!--SortedItems can find above in Window.Resources-->
                <!--Dir can find in _Direction.cs-->
            </ComboBox>
            <Button Grid.Column="2" Grid.Row="2" MinWidth="30" Background="Gray" Content="..." TabIndex="10"
                    Command="{Binding _Dir.NewEditDirection}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
        </Grid>
        <Button Grid.Row="3"   Content="Применить фильтр" Background="#FF65DA65"
                    Command="{Binding InitComplicatedFilterCommand}"                                      
                TabIndex="3" Margin="3,3,2.6,3.2"  >
        </Button>
        <ListBox x:Name="Authors"
                     Grid.Row="4" Grid.RowSpan="8" Margin="4"
                    ItemsSource="{Binding Source={StaticResource SortedAuthorRecords}}" 
                    SelectedItem="{Binding AuthorsRecord}" 
                     TabIndex="2"
                 HorizontalContentAlignment="Center">
            <!--SortedItems can find above in Window.Resources-->
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel >
                        <TextBlock Text="----------------------------------------------------------" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Background="AliceBlue"/>
                        <TextBlock Text="{Binding Persone.NickName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center"  />
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Persone.Surname}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Persone.Name}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Persone.Patronimic}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center" Foreground="Red"/>
                            <TextBlock Text="{Binding Author.AuthorStatus.AuthorStatusName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Left" Foreground="Green" FontWeight="Bold"/>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <WrapPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Имя: " Foreground="Brown" FontWeight="Bold"/>
            </Viewbox>
            <TextBox x:Name="TBxName"  MinWidth="220" TabIndex="0"
                    Text="{Binding Persone.Name, Mode=TwoWay}"/>
            <!--Persone can find in AuthorsVMClass.cs-->
        </WrapPanel>
        <WrapPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Фамилия: " Foreground="Brown" />
            </Viewbox>
            <TextBox x:Name="Surname"   Text="{Binding Persone.Surname, Mode=TwoWay}" TabIndex="1"  MinWidth="250"/>
        </WrapPanel>
        <!--Persone can find in AuthorsVMClass.cs-->
        <WrapPanel Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Отчество: " Foreground="Brown"/>
            </Viewbox>
            <TextBox x:Name="Patronimic"   Text="{Binding Persone.Patronimic, Mode=TwoWay}" TabIndex="2"  MinWidth="250"/>
            <!--Persone can find in ForEditOrder.cs-->
        </WrapPanel>
        <WrapPanel Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Ник: " FontWeight="Bold" Foreground="Brown"/>
            </Viewbox>
            <TextBox    Text="{Binding Persone.NickName, Mode=TwoWay}"  MinWidth="110"  TabIndex="3"/>
            <!--Persone can find in AuthorsVMClass.cs-->
            <Button Content="Добавить контакты " Background="YellowGreen" Height="30" TabIndex="4" Margin="5"
                     Command="{Binding NewEditContactsCommand}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}" Width="177"/>
            <!--NewEditContactsCommand can find in ForEditOrderAddContacts.cs-->
        </WrapPanel>

        <WrapPanel Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Margin="3">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Пол:" FontWeight="Bold" Foreground="Brown"/>
            </Viewbox>
            <RadioButton GroupName="A" Content="Мужской" VerticalAlignment="Center" TabIndex="5"
                          IsChecked="{Binding Persone.Male, Mode=TwoWay}" />
            <!--Persone can find in AuthorsVMClass.cs-->
            <!--Converter={StaticResource boolInverterConverter}-->
            <RadioButton GroupName="A" Content="Женский" VerticalAlignment="Center" TabIndex="6" 
                          IsChecked="{Binding Persone.Female, Mode=TwoWay}"/>
            <!--Persone can find in AuthorsVMClass.cs-->
            <Button Content="В ч.списке?" Background="Black" Height="30" Width="149" TabIndex="7" Margin="5"
                    Command="{Binding CheckBlackListCommand}"/>
        </WrapPanel>
        <StackPanel Grid.Row="5" Grid.Column="1"  Margin="3" VerticalAlignment="Center" Orientation="Horizontal" Grid.ColumnSpan="2">
            <CheckBox x:Name="BirthDate" TabIndex="8"/>
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Дата рождения" Foreground="Brown" FontWeight="Bold"/>
            </Viewbox>
            <DatePicker  IsDropDownOpen="False" SelectedDateFormat="Short" 
                        MaxWidth="150" TabIndex="9" HorizontalAlignment="Center"
                        SelectedDate="{Binding Date.DayBirth,Mode=TwoWay}"
                         IsEnabled="{Binding ElementName=BirthDate, Path=IsChecked}"/>

            <!--Date can find in AuthorsVMClass.cs-->
        </StackPanel>
        <WrapPanel Grid.Row="6" Grid.Column="1"  Grid.ColumnSpan="2"  Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" >
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Статус: " FontWeight="Bold"  Foreground="Brown"/>
            </Viewbox>
            <!--<ComboBox x:Name="StatusList"  MinWidth="165"  TabIndex="10" 
                      IsEditable="False" IsSynchronizedWithCurrentItem="True"
                     ItemsSource="{Binding Source={StaticResource SortedStatuses}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _AuthorStatus.AuthorStatus,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     DisplayMemberPath="AuthorStatusName" Width="219" 
                      HorizontalContentAlignment="Center"
                     Background="White" >
                -->
            <!--Status can fint in _AuthorStatus.cs-->
            <!--
            </ComboBox>-->


            <ComboBox x:Name="StatusList"  MinWidth="165"  TabIndex="10" 
                      IsEditable="False" IsSynchronizedWithCurrentItem="False"
                     ItemsSource="{Binding Source={StaticResource SortedStatuses}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                      SelectedValue="{Binding _AuthorStatus.AuthorStatus.AuthorStatusId, Mode=TwoWay}"
                      SelectedValuePath="AuthorStatusId"
                     SelectedItem="{Binding _AuthorStatus.AuthorStatus}"
                     DisplayMemberPath="AuthorStatusName" Width="219" 
                      HorizontalContentAlignment="Center"
                      ToolTip="{Binding _AuthorStatus.AuthorStatus.AuthorStatusName}" 
                     Background="White"
                      >
                <!--Status can fint in _AuthorStatus.cs-->
            </ComboBox>
            <Button x:Name="AddDStatus" Width="40" Background="Gray" Content="..." TabIndex="11"
                    Command="{Binding NewEditAuthorStatusCommand}" CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}"/>
            <!--Command NewEditStatusCommand can find in _AuthorStatus.cs-->
        </WrapPanel>

        <Grid Grid.Row="7" Grid.Column="1" Grid.ColumnSpan="2" Grid.RowSpan="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.25*"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Viewbox  MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock  Text="Источник " FontWeight="Bold" Foreground="Brown"/>
            </Viewbox>
            <TextBox Grid.Column="1"    Text="{Binding Author.Source, Mode=TwoWay}"
                     FontSize="12" TextWrapping="Wrap" TabIndex="14"
                        Height="120" TextAlignment="Center" VerticalContentAlignment="Center"
                        HorizontalAlignment="Stretch" Margin="5"  
                        VerticalScrollBarVisibility="Auto"/>
        </Grid>

        <StackPanel Grid.Row="9" Grid.Column="1"   Margin="3" VerticalAlignment="Bottom" Grid.RowSpan="2">

            <Viewbox  MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Сотрудничаем с:" Foreground="Brown" FontWeight="Bold"/>
            </Viewbox>
            <StackPanel Orientation="Horizontal">
                <CheckBox x:Name="StartWorkEnable" TabIndex="16"  />
                <DatePicker x:Name="DateOfReception" IsDropDownOpen="False" SelectedDateFormat="Short" 
                            IsEnabled="{Binding ElementName=StartWorkEnable,  Path=IsChecked}"
                        MaxWidth="150" TabIndex="13" HorizontalAlignment="Center"
                        SelectedDate="{Binding Date.StartDateWork, Mode=TwoWay}"  Width="111" Height="21" Margin="10,0,29.4,0"
                        HorizontalContentAlignment="Center"/>
            </StackPanel>

            <!--Date can find in ForEditOrder.cs-->
        </StackPanel>
        <StackPanel Grid.Row="9" Grid.Column="2"   Margin="3" VerticalAlignment="Bottom" Grid.RowSpan="2">
            <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                <TextBlock Text="Прекратили работать с:" Foreground="Brown" FontWeight="Bold"/>
            </Viewbox>
            <StackPanel Orientation="Horizontal">
                <CheckBox x:Name="EndWorkEnable" TabIndex="18"  />
                <DatePicker  IsDropDownOpen="False" SelectedDateFormat="Short" 
                             IsEnabled="{Binding ElementName=EndWorkEnable,  Path=IsChecked}"
                        MaxWidth="150" TabIndex="13" HorizontalAlignment="Center"
                        SelectedDate="{Binding Date.EndDateWork, Mode=TwoWay}"  Width="111" Height="21" Margin="10,0,29.4,0"
                        HorizontalContentAlignment="Center"/>
            </StackPanel>

            <!--Date can find in ForEditOrder.cs-->
        </StackPanel>
        <Viewbox Grid.Column="3" Grid.ColumnSpan="2" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Center" 
                     VerticalAlignment="Bottom" >
            <TextBlock Text="Первичная информация об авторе" FontWeight="Bold" Foreground="Brown"/>
        </Viewbox>
        <TextBox Grid.Column="3" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="4" Margin="5" 
                     FontSize="12" TabIndex="19" TextWrapping="Wrap"  AcceptsReturn="True" MinHeight="103"
                    VerticalScrollBarVisibility="Auto" 
                    Text="{Binding PersoneDescription.Description, Mode=TwoWay}" Height="169"/>
        <!--PersoneDescription can find in AuthorsVMClass.cs-->
        <StackPanel Grid.Column="3" Grid.Row="5" Grid.ColumnSpan="3" Grid.RowSpan="4"  Margin="3">
            <Viewbox MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Center" 
                     VerticalAlignment="Bottom">
                <TextBlock Text="Отзывы об авторе" FontWeight="Bold" 
                           Foreground="Brown"/>
            </Viewbox>
            <TextBox  Margin="5,5,4.8,5" FontSize="12" TabIndex="20" MinHeight="85"
                      TextWrapping="Wrap"  AcceptsReturn="True"
                      VerticalScrollBarVisibility="Auto"                     
                      Text="{Binding PersoneDescription.FeedBack, Mode=TwoWay}" Height="98"/>
            <!--PersoneDescription can find in AuthorsVMClass.cs-->
        </StackPanel>
        <StackPanel Grid.Column="3" Grid.Row="8" Grid.ColumnSpan="3" Grid.RowSpan="3"  Margin="3">

            <TextBox x:Name="AuthorStop"  Margin="5,5,4.4,5" FontSize="12" TabIndex="21" MinHeight="115"
                      TextWrapping="Wrap"  AcceptsReturn="True"
                      VerticalScrollBarVisibility="Auto" Foreground="Red"
                      Text="{Binding PersoneDescription.ReasonFortermCoop, Mode=TwoWay}" 
                       IsEnabled="{Binding ElementName=EndWorkEnable,  Path=IsChecked}" />
            <!--PersoneDescription can find in AuthorsVMClass.cs-->
        </StackPanel>
        <TextBlock Grid.Column="3" Grid.Row="8" Grid.ColumnSpan="3" Grid.RowSpan="3"
            IsHitTestVisible="False" Text="Тут мы указываем причины прекращения сотрудничества с автором " FontSize="25"                     
                    TextWrapping="Wrap" VerticalAlignment="Center"
                    TextAlignment="Center" 
                    HorizontalAlignment="Center"  Foreground="DarkGray">
            <TextBlock.Style>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Text, ElementName=AuthorStop}" Value="">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <Grid Grid.Column="5" Grid.RowSpan="5" Margin="4">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Добавить/изменить фото?" Command="{Binding OpenFileDialogCommand}" 
                              Height="17"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.Background>
                <ImageBrush ImageSource="{Binding DefaultPhoto, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid.Background>
            <!--<Image Source="{Binding Photo, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" />-->
            <Image Source="{Binding Path=Persone.Photo, Converter={StaticResource imagePathConverter}, Mode=OneWay}" VerticalAlignment="Center" />
        </Grid>


        <Grid Grid.Row="11" Grid.Column="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="0.5*"/>
            </Grid.RowDefinitions>
            <WrapPanel  Grid.ColumnSpan="3"  Margin="3,3,0,3" HorizontalAlignment="Center"  VerticalAlignment="Center">
                <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                    <TextBlock Text="Направление: " FontWeight="Bold"  Foreground="Brown"/>
                </Viewbox>
                <ComboBox x:Name="Direction"  MinWidth="185"  TabIndex="0" SelectedIndex="0" 
                      IsEditable="False"
                     ItemsSource="{Binding Source={StaticResource SortedItems}, 
                      UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _Dir.SelectedDir2,  UpdateSourceTrigger=PropertyChanged}"
                     DisplayMemberPath="DirectionName"
                     ToolTip="{Binding _Dir.SelectedDir2.DirectionName}" 
                     HorizontalContentAlignment="Center"
                     Background="White" >

                    <!--SortedItems can find above in Window.Resources
                Dir can find in _Direction.cs-->

                </ComboBox>


                <Button x:Name="AddDirection" Width="40" Background="Gray" Content="..." TabIndex="1"
                    Command="{Binding _Dir.NewEditDirection}" 
                    CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}" />

                <!--Command NewEditDirection can find in _Direction.cs-->
            </WrapPanel>
            <ListBox x:Name="DirList" 
                     Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="2" Margin="5" 
                 
                     ItemsSource="{Binding _Dir.AuthorDirections}"  
                     SelectedIndex="{Binding _Dir.Index}"
                     SelectionMode="Single" 
                     IsSynchronizedWithCurrentItem="False"
                     TabIndex="3"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" >

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel >
                            <TextBlock Text="{Binding DirectionName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center"/>
                        </DockPanel>
                        <!--Directionname is one of properties of Dir.Can find in DirectionClass.cs-->
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
            <Button Grid.Column="0" Grid.Row="3"  Content="+" Background="Red"
                    Command="{Binding _Dir.AddAuthorDirectionCommand}"                   
                     IsEnabled="{Binding SelectedItem, Converter={StaticResource NullBoolConverter}, ElementName=Direction}"
                     TabIndex="4" >
                <!--Command AddDirectionCommand can find in DirectionClass.cs-->
            </Button>

            <Button Grid.Column="2" Grid.Row="3" Content="-" 
                Command="{Binding _Dir.DelFromAuthorDirectionCommand}"                
                IsEnabled="{Binding SelectedItem, 
                     Converter={StaticResource NullBoolConverter}, ElementName=DirList}"
                TabIndex="5" RenderTransformOrigin="0.5,0.681"/>
        </Grid>
        <Grid Grid.Row="11" Grid.Column="3" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.5*"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition Height="0.5*"/>
            </Grid.RowDefinitions>
            <WrapPanel  Grid.ColumnSpan="3"  Margin="3,3,0,3" HorizontalAlignment="Center"  VerticalAlignment="Center">
                <Viewbox Grid.Column="1" MaxHeight="18"  Stretch="Uniform" Margin="5" HorizontalAlignment="Left" 
                     VerticalAlignment="Stretch">
                    <TextBlock Text="Предмет: " FontWeight="Bold"  Foreground="Brown"/>
                </Viewbox>
                <ComboBox x:Name="Subject"  MinWidth="185" MaxWidth="200"  TabIndex="11"   SelectedIndex="0"                       
                     ItemsSource="{Binding Source={StaticResource SortedSubjects}, 
                     UpdateSourceTrigger=PropertyChanged}" 
                     SelectedItem="{Binding _Subj.SelectedSubj2, UpdateSourceTrigger=PropertyChanged}"
                     DisplayMemberPath="SubName"
                     ToolTip="{Binding _Subj.SelectedSubj2.SubName}" 
                     HorizontalContentAlignment="Center"
                     Background="White"
                     IsSynchronizedWithCurrentItem="False">
                    <!--SortedSubjects can find above in Window.Resources-->
                    <!--Subj can find in _Subject.cs-->
                </ComboBox>
                <Button x:Name="AddSubject" Width="40" Background="Gray" Content="..." TabIndex="12"
                    Command="{Binding _Subj.NewEditSubject}"
                    CommandParameter="{Binding DataContext, RelativeSource=
                    {RelativeSource AncestorType={x:Type Window}}}" />
                <!--Command NewEditSubject in _Subject.cs-->
            </WrapPanel>
            <ListBox x:Name="DirList1" 
                     Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="2" Margin="5" 
                    ItemsSource="{Binding _Subj.AuthorSubjects}" 
                    SelectedIndex="{Binding _Subj.Index}"
                     SelectionMode="Single" 
                     IsSynchronizedWithCurrentItem="False"
                     TabIndex="3"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" >

                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel >
                            <TextBlock Text="{Binding SubName}" Margin="2"
                                   TextWrapping="WrapWithOverflow" 
                                   TextAlignment="Center"/>
                        </DockPanel>
                        <!--SubName is one of properties of Dir.Can find in _Subject.cs-->
                    </DataTemplate>
                </ListBox.ItemTemplate>

            </ListBox>
            <Button Grid.Column="0" Grid.Row="3"  Content="+" Background="Red"
                    Command="{Binding _Subj.AddAuthorSubjectCommand}" 
                 IsEnabled="{Binding SelectedItem, Converter={StaticResource NullBoolConverter}, ElementName=Subject}"
                TabIndex="4" >
                <!--Command AddAuthorSubjectCommand can find in _Subject.cs-->
            </Button>

            <Button Grid.Column="2" Grid.Row="3" Content="-"
                Command="{Binding _Subj.DelFromAuthorSubjectCommand}"                 
                IsEnabled="{Binding SelectedItem, 
                     Converter={StaticResource NullBoolConverter}, ElementName=DirList1}"
                TabIndex="5" />
        </Grid>


        <Grid Margin="3" Grid.Row="11" Grid.Column="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition  Width="4*"/>
                <ColumnDefinition  />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <StackPanel  Orientation="Horizontal" MinHeight="25" HorizontalAlignment="Center" >
                <TextBlock Text="Рейтинг: " Margin="3,0" VerticalAlignment="Center" Foreground="Brown" FontWeight="Bold"  />
                <TextBlock Text="{Binding Author.Rating,UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" Foreground="Red" FontWeight="Bold"  />
            </StackPanel>
            <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                               Text="Пунктуальность:" FontWeight="Bold"  Foreground="Brown"   />
            <xctk:IntegerUpDown Grid.Row="1" Grid.Column="1"
                        MaxWidth="800" Maximum="10" Minimum="0"                                          
                                Value="{Binding Author.Punctually, Mode=TwoWay}"
                                TabIndex="0" Margin="3" />
            <TextBlock Grid.Row="2" Grid.Column="0"  HorizontalAlignment="Left" VerticalAlignment="Center"
                               Text="Качество работы:" FontWeight="Bold"  Foreground="Brown"/>
            <xctk:IntegerUpDown  Grid.Row="2" Grid.Column="1"
                        MaxWidth="800" Maximum="10" Minimum="0"  Margin="3"
                                    Value="{Binding Author.WorkQuality, Mode=TwoWay}"
                                    TabIndex="1"/>
            <TextBlock   Grid.Row="3" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Text="Ответсвенность:" FontWeight="Bold"  Foreground="Brown"/>
            <xctk:IntegerUpDown  Grid.Row="3" Grid.Column="1"
                        MaxWidth="800" Maximum="10" Minimum="0"  Margin="3"
                                Value="{Binding Author.Responsibility, Mode=TwoWay}" 
                                TabIndex="2"/>
            <TextBlock Grid.Row="4" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                        Text="Сговорчивость по доработке:" 
                               FontWeight="Bold"  Foreground="Brown"/>
            <xctk:IntegerUpDown Grid.Row="4" Grid.Column="1"
                        MaxWidth="800" Maximum="10" Minimum="0"  Margin="3" 
                                Value="{Binding Author.CompletionCompliance, Mode=TwoWay}" 
                                TabIndex="3"/>

            <Button Grid.Row="5"   Content="Сформировать рейтинг" Background="Orange"
                    Command="{Binding CreateRatingCommand}" MinHeight="20"  Grid.ColumnSpan="2"                     
                    TabIndex="4" >
            </Button>
            <Button Grid.Row="6" Content="Сохранить" Background="Green" TabIndex="23"
                            MinHeight="25" Grid.ColumnSpan="2"
                Command="{Binding SaveAuthorDataCommand}" />
        </Grid>
    </Grid>
</Window>